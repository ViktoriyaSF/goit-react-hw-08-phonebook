{"version":3,"file":"static/js/498.885e371f.chunk.js","mappings":"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","sources":["components/BasicStyles/Container.styled.jsx","components/ContactForm/ContactForm.styled.jsx","redux/Contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.syled.jsx","components/Loader/StyledLoader.jsx","components/Loader/Loader.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts-pages.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContainerStyl = styled.div`\n  /* min-width: 320px; */\n  padding: 0 15px;\n  margin-top: 40px;\n  margin-left: auto;\n  margin-right: auto;\n  text-align: center;\n\n  display: block;\n  width: 320px;\n\n  @media screen and (min-width: 480px) {\n    max-width: 480px;\n  }\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n  }\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n  }\n  /* background-color: #bceeae; */\n  /* border: 1px solid black; */\n  /* border-radius: 40px; */\n  /* display: flex;\n  flex-direction: column;\n  gap: 10px;\n  justify-content: center;\n  align-items: center; */\n`;\nexport const HomePageStyl = styled.div`\n  text-align: center;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 0 15px;\n  max-width: 720px;\n  h1 {\n    font-size: 48px;\n    margin-top: 17%;\n  }\n  p {\n    font-size: 20px;\n    margin-top: 7%;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 0 15px;\n  margin: 20px auto;\n  gap: 10px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  width: 100%;\n  padding: 0;\n  margin: 0;\n`;\nexport const Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  border: none;\n  border-radius: 5px;\n  background-color: #fff;\n`;\nexport const Button = styled.button`\n  display: inline-block;\n  padding: 5px 10px;\n  margin: 10px 10px;\n  border: none;\n  border-radius: 5px;\n  background-color: rgb(33, 150, 243);\n  color: rgb(255, 255, 255);\n\n  text-transform: uppercase;\n  :hover,\n  :focus {\n    transform: scale(1.025);\n    background-color: #5a79c1;\n  }\n  &:active {\n    scale: 0.95;\n    background-color: green;\n    outline: 5px solid green;\n    outline-offset: 7px;\n  }\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","// import propTypes from 'prop-types';\nimport React from 'react';\nimport { Form, Input, Label, Button } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/Contacts/selectors';\n// import { nanoid } from 'nanoid';\nimport { toast } from 'react-toastify';\nimport { addContact } from 'redux/Contacts/operations';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const contact = {\n      // id: nanoid(),\n      name: evt.currentTarget.elements.name.value,\n      number: evt.currentTarget.elements.number.value,\n    };\n\n    const listName = contacts.map(contact => contact.name.toLowerCase());\n    const newName = contact.name.toLowerCase().trim();\n\n    if (listName.includes(newName)) {\n      return toast.warn(`${contact.name} is already in contacts.`);\n    }\n\n    dispatch(addContact(contact));\n    evt.currentTarget.reset();\n  };\n  // const nameInputId = nanoid();\n  // const telInputId = nanoid();\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          // id={nameInputId}\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          // id={telInputId}\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n\n// ContactForm.propTypes = {\n//   onSubmit: propTypes.func.isRequired,\n// };\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 0 15px;\n  margin: 20px auto;\n  gap: 10px;\n  font-size: 13px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  margin: 5px auto;\n  padding: 5px;\n  border-radius: 7px;\n\n  :hover,\n  :focus {\n    transform: scale(1.025);\n    background-color: #fff;\n  }\n\n  button {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background-color: transparent;\n    padding: 0;\n\n    :hover,\n    :focus {\n      transform: scale(1.025);\n      color: #4801fb;\n    }\n    &:active {\n      scale: 0.95;\n      border-radius: 50%;\n      color: #f12828a9;\n      outline: 3px solid #f12828a9;\n      outline-offset: 7px;\n    }\n  }\n`;\nexport const Phone = styled.p`\n  display: flex;\n  gap: 10px;\n`;\n","import styled from 'styled-components';\n\nexport const StyledLoader = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  text-align: center;\n  justify-content: center;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { StyledLoader } from './StyledLoader';\n\nexport const Loader = () => {\n  return (\n    <StyledLoader>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#0c9e68\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </StyledLoader>\n  );\n};\n","// import propTypes from 'prop-types';\nimport React, { useEffect } from 'react';\n\nimport { List, Item, Phone } from './ContactList.syled';\nimport { FiDelete } from 'react-icons/fi';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectError,\n  selectFilteredContacts,\n  selectIsLoading,\n} from 'redux/Contacts/selectors';\nimport { deleteContact, fetchContacts } from 'redux/Contacts/operations';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <>\n      {isLoading && (\n        <div>\n          <h2>Loading</h2>\n          <Loader />\n        </div>\n      )}\n      {!contacts?.length && !error && !isLoading && <h2>No contacts found.</h2>}\n\n      {/* якщо виникла помилка */}\n      {error && <h2>{error}</h2>}\n      <List>\n        {contacts.map(({ id, name, number }) => (\n          <Item key={id}>\n            <p>{name}:</p>\n            <Phone>\n              {number}\n              <button type=\"button\" onClick={() => onDeleteContact(id)}>\n                <FiDelete />\n              </button>\n            </Phone>\n          </Item>\n        ))}\n      </List>\n    </>\n  );\n};\n// ContactList.propTypes = {\n//   contacts: propTypes.arrayOf(\n//     propTypes.exact({\n//       id: propTypes.string.isRequired,\n//       name: propTypes.string.isRequired,\n//       number: propTypes.string.isRequired,\n//     }).isRequired\n//   ).isRequired,\n// };\n","import styled from 'styled-components';\nimport { Label } from 'components/ContactForm/ContactForm.styled';\n\nexport const LabelFilter = styled(Label)`\n  padding: 0 15px;\n  margin: 20px auto;\n  display: flex;\n  gap: 10px;\n\n  div {\n    display: flex;\n    gap: 10px;\n    align-items: center;\n  }\n`;\n","// import propTypes from 'prop-types';\n// import { nanoid } from 'nanoid';\nimport React from 'react';\nimport { LabelFilter } from './Filter.styled';\nimport { Input } from 'components/ContactForm/ContactForm.styled';\nimport { FiSearch } from 'react-icons/fi';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/Contacts/selectors';\nimport { setFilter } from 'redux/Contacts/filterSlice';\n\n// const idFilter = nanoid();\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const onFilter = evt => dispatch(setFilter(evt.target.value));\n\n  return (\n    <LabelFilter>\n      <div>\n        <FiSearch />\n        Find contact by name\n      </div>\n      <Input\n        type=\"text\"\n        value={filter}\n        // id={idFilter}\n        onChange={onFilter}\n        placeholder=\"search\"\n      ></Input>\n    </LabelFilter>\n  );\n};\n\n// Filter.propTypes = {\n//   value: propTypes.string.isRequired,\n//   onChange: propTypes.func.isRequired,\n// };\n","import { ContainerStyl } from 'components/BasicStyles/Container.styled';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\n\nexport default function ContactsPages() {\n  return (\n    <ContainerStyl>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </ContainerStyl>\n  );\n}\n"],"names":["ContainerStyl","styled","HomePageStyl","Form","Label","Input","Button","selectContacts","state","contacts","items","selectFilter","filter","selectError","error","selectIsLoading","isLoading","selectFilteredContacts","createSelector","contact","name","toLowerCase","includes","ContactForm","useSelector","dispatch","useDispatch","onSubmit","evt","preventDefault","currentTarget","elements","value","number","listName","map","newName","trim","toast","addContact","reset","type","pattern","title","required","List","Item","Phone","StyledLoader","Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","ContactList","useEffect","fetchContacts","length","id","onClick","deleteContact","onDeleteContact","LabelFilter","Filter","onChange","setFilter","target","placeholder","ContactsPages"],"sourceRoot":""}